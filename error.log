Attaching to preprocess-1, trainer-1
preprocess-1  | Created training dataset with 31367 images
preprocess-1  | Created validation dataset with 7842 images
preprocess-1  | Number of classes: 43
[Kpreprocess-1 exited with code 0
trainer-1     | Using GPU: NVIDIA GeForce GTX 1070 Ti
trainer-1     | Available GPU memory: 7.9 GB
trainer-1     | Created regnet model with architecture:
trainer-1     | RegNet(
trainer-1     |   (stem): ConvNormAct(
trainer-1     |     (conv): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
trainer-1     |     (bn): BatchNormAct2d(
trainer-1     |       32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |       (drop): Identity()
trainer-1     |       (act): ReLU(inplace=True)
trainer-1     |     )
trainer-1     |   )
trainer-1     |   (s1): RegStage(
trainer-1     |     (b1): Bottleneck(
trainer-1     |       (conv1): ConvNormAct(
trainer-1     |         (conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (conv2): ConvNormAct(
trainer-1     |         (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=4, bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (se): SEModule(
trainer-1     |         (fc1): Conv2d(64, 8, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (bn): Identity()
trainer-1     |         (act): ReLU(inplace=True)
trainer-1     |         (fc2): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (gate): Sigmoid()
trainer-1     |       )
trainer-1     |       (conv3): ConvNormAct(
trainer-1     |         (conv): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): Identity()
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (act3): ReLU()
trainer-1     |       (downsample): ConvNormAct(
trainer-1     |         (conv): Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): Identity()
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (drop_path): Identity()
trainer-1     |     )
trainer-1     |   )
trainer-1     |   (s2): RegStage(
trainer-1     |     (b1): Bottleneck(
trainer-1     |       (conv1): ConvNormAct(
trainer-1     |         (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (conv2): ConvNormAct(
trainer-1     |         (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=8, bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (se): SEModule(
trainer-1     |         (fc1): Conv2d(128, 16, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (bn): Identity()
trainer-1     |         (act): ReLU(inplace=True)
trainer-1     |         (fc2): Conv2d(16, 128, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (gate): Sigmoid()
trainer-1     |       )
trainer-1     |       (conv3): ConvNormAct(
trainer-1     |         (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): Identity()
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (act3): ReLU()
trainer-1     |       (downsample): ConvNormAct(
trainer-1     |         (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): Identity()
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (drop_path): Identity()
trainer-1     |     )
trainer-1     |     (b2): Bottleneck(
trainer-1     |       (conv1): ConvNormAct(
trainer-1     |         (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (conv2): ConvNormAct(
trainer-1     |         (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=8, bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (se): SEModule(
trainer-1     |         (fc1): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (bn): Identity()
trainer-1     |         (act): ReLU(inplace=True)
trainer-1     |         (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (gate): Sigmoid()
trainer-1     |       )
trainer-1     |       (conv3): ConvNormAct(
trainer-1     |         (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): Identity()
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (act3): ReLU()
trainer-1     |       (downsample): Identity()
trainer-1     |       (drop_path): Identity()
trainer-1     |     )
trainer-1     |     (b3): Bottleneck(
trainer-1     |       (conv1): ConvNormAct(
trainer-1     |         (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (conv2): ConvNormAct(
trainer-1     |         (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=8, bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (se): SEModule(
trainer-1     |         (fc1): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (bn): Identity()
trainer-1     |         (act): ReLU(inplace=True)
trainer-1     |         (fc2): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (gate): Sigmoid()
trainer-1     |       )
trainer-1     |       (conv3): ConvNormAct(
trainer-1     |         (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): Identity()
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (act3): ReLU()
trainer-1     |       (downsample): Identity()
trainer-1     |       (drop_path): Identity()
trainer-1     |     )
trainer-1     |   )
trainer-1     |   (s3): RegStage(
trainer-1     |     (b1): Bottleneck(
trainer-1     |       (conv1): ConvNormAct(
trainer-1     |         (conv): Conv2d(128, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (conv2): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=20, bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (se): SEModule(
trainer-1     |         (fc1): Conv2d(320, 32, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (bn): Identity()
trainer-1     |         (act): ReLU(inplace=True)
trainer-1     |         (fc2): Conv2d(32, 320, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (gate): Sigmoid()
trainer-1     |       )
trainer-1     |       (conv3): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): Identity()
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (act3): ReLU()
trainer-1     |       (downsample): ConvNormAct(
trainer-1     |         (conv): Conv2d(128, 320, kernel_size=(1, 1), stride=(2, 2), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): Identity()
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (drop_path): Identity()
trainer-1     |     )
trainer-1     |     (b2): Bottleneck(
trainer-1     |       (conv1): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (conv2): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (se): SEModule(
trainer-1     |         (fc1): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (bn): Identity()
trainer-1     |         (act): ReLU(inplace=True)
trainer-1     |         (fc2): Conv2d(80, 320, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (gate): Sigmoid()
trainer-1     |       )
trainer-1     |       (conv3): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): Identity()
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (act3): ReLU()
trainer-1     |       (downsample): Identity()
trainer-1     |       (drop_path): Identity()
trainer-1     |     )
trainer-1     |     (b3): Bottleneck(
trainer-1     |       (conv1): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (conv2): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (se): SEModule(
trainer-1     |         (fc1): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (bn): Identity()
trainer-1     |         (act): ReLU(inplace=True)
trainer-1     |         (fc2): Conv2d(80, 320, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (gate): Sigmoid()
trainer-1     |       )
trainer-1     |       (conv3): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): Identity()
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (act3): ReLU()
trainer-1     |       (downsample): Identity()
trainer-1     |       (drop_path): Identity()
trainer-1     |     )
trainer-1     |     (b4): Bottleneck(
trainer-1     |       (conv1): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (conv2): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (se): SEModule(
trainer-1     |         (fc1): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (bn): Identity()
trainer-1     |         (act): ReLU(inplace=True)
trainer-1     |         (fc2): Conv2d(80, 320, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (gate): Sigmoid()
trainer-1     |       )
trainer-1     |       (conv3): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): Identity()
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (act3): ReLU()
trainer-1     |       (downsample): Identity()
trainer-1     |       (drop_path): Identity()
trainer-1     |     )
trainer-1     |     (b5): Bottleneck(
trainer-1     |       (conv1): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (conv2): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (se): SEModule(
trainer-1     |         (fc1): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (bn): Identity()
trainer-1     |         (act): ReLU(inplace=True)
trainer-1     |         (fc2): Conv2d(80, 320, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (gate): Sigmoid()
trainer-1     |       )
trainer-1     |       (conv3): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): Identity()
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (act3): ReLU()
trainer-1     |       (downsample): Identity()
trainer-1     |       (drop_path): Identity()
trainer-1     |     )
trainer-1     |     (b6): Bottleneck(
trainer-1     |       (conv1): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (conv2): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (se): SEModule(
trainer-1     |         (fc1): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (bn): Identity()
trainer-1     |         (act): ReLU(inplace=True)
trainer-1     |         (fc2): Conv2d(80, 320, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (gate): Sigmoid()
trainer-1     |       )
trainer-1     |       (conv3): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): Identity()
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (act3): ReLU()
trainer-1     |       (downsample): Identity()
trainer-1     |       (drop_path): Identity()
trainer-1     |     )
trainer-1     |     (b7): Bottleneck(
trainer-1     |       (conv1): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (conv2): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (se): SEModule(
trainer-1     |         (fc1): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (bn): Identity()
trainer-1     |         (act): ReLU(inplace=True)
trainer-1     |         (fc2): Conv2d(80, 320, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (gate): Sigmoid()
trainer-1     |       )
trainer-1     |       (conv3): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): Identity()
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (act3): ReLU()
trainer-1     |       (downsample): Identity()
trainer-1     |       (drop_path): Identity()
trainer-1     |     )
trainer-1     |     (b8): Bottleneck(
trainer-1     |       (conv1): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (conv2): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=20, bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (se): SEModule(
trainer-1     |         (fc1): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (bn): Identity()
trainer-1     |         (act): ReLU(inplace=True)
trainer-1     |         (fc2): Conv2d(80, 320, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (gate): Sigmoid()
trainer-1     |       )
trainer-1     |       (conv3): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): Identity()
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (act3): ReLU()
trainer-1     |       (downsample): Identity()
trainer-1     |       (drop_path): Identity()
trainer-1     |     )
trainer-1     |   )
trainer-1     |   (s4): RegStage(
trainer-1     |     (b1): Bottleneck(
trainer-1     |       (conv1): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (conv2): ConvNormAct(
trainer-1     |         (conv): Conv2d(768, 768, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=48, bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (se): SEModule(
trainer-1     |         (fc1): Conv2d(768, 80, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (bn): Identity()
trainer-1     |         (act): ReLU(inplace=True)
trainer-1     |         (fc2): Conv2d(80, 768, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (gate): Sigmoid()
trainer-1     |       )
trainer-1     |       (conv3): ConvNormAct(
trainer-1     |         (conv): Conv2d(768, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): Identity()
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (act3): ReLU()
trainer-1     |       (downsample): ConvNormAct(
trainer-1     |         (conv): Conv2d(320, 768, kernel_size=(1, 1), stride=(2, 2), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): Identity()
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (drop_path): Identity()
trainer-1     |     )
trainer-1     |     (b2): Bottleneck(
trainer-1     |       (conv1): ConvNormAct(
trainer-1     |         (conv): Conv2d(768, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (conv2): ConvNormAct(
trainer-1     |         (conv): Conv2d(768, 768, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=48, bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): ReLU(inplace=True)
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (se): SEModule(
trainer-1     |         (fc1): Conv2d(768, 192, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (bn): Identity()
trainer-1     |         (act): ReLU(inplace=True)
trainer-1     |         (fc2): Conv2d(192, 768, kernel_size=(1, 1), stride=(1, 1))
trainer-1     |         (gate): Sigmoid()
trainer-1     |       )
trainer-1     |       (conv3): ConvNormAct(
trainer-1     |         (conv): Conv2d(768, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
trainer-1     |         (bn): BatchNormAct2d(
trainer-1     |           768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True
trainer-1     |           (drop): Identity()
trainer-1     |           (act): Identity()
trainer-1     |         )
trainer-1     |       )
trainer-1     |       (act3): ReLU()
trainer-1     |       (downsample): Identity()
trainer-1     |       (drop_path): Identity()
trainer-1     |     )
trainer-1     |   )
trainer-1     |   (final_conv): Identity()
trainer-1     |   (head): ClassifierHead(
trainer-1     |     (global_pool): SelectAdaptivePool2d(pool_type=avg, flatten=Flatten(start_dim=1, end_dim=-1))
trainer-1     |     (drop): Dropout(p=0.0, inplace=False)
trainer-1     |     (fc): Linear(in_features=768, out_features=43, bias=True)
trainer-1     |     (flatten): Identity()
trainer-1     |   )
trainer-1     | )
[Ktrainer-1 exited with code 1
